{"version":3,"sources":["webpack:///webpack/bootstrap 55057e6788dfced6d46a","webpack:///./js/main.js","webpack:///./js/plane.js","webpack:///./node_modules/victor/index.js"],"names":["props","width","height","scene","init","canvas","document","getElementById","dim","body","getBoundingClientRect","context","getContext","globalCompositeOperation","push","animate","requestAnimationFrame","draw","clearRect","i","length","Victor","require","Plane","x","y","position","velocity","acceleration","ctx","global","color","angle","steeringAngle","addEventListener","e","keyCode","rotate","angleRadians","Math","PI","add","cos","sin","fixBorders","dir","abs","update","strokeStyle","save","beginPath","translate","rect","fill","restore","exports","module","fromArray","arr","fromObject","obj","prototype","addX","vec","addY","addScalar","scalar","addScalarX","addScalarY","subtractX","subtractY","subtract","subtractScalar","subtractScalarX","subtractScalarY","divideX","vector","divideY","divide","divideScalar","divideScalarX","divideScalarY","invertX","invertY","invert","multiplyX","multiplyY","multiply","multiplyScalar","multiplyScalarX","multiplyScalarY","normalize","norm","limit","max","factor","randomize","topLeft","bottomRight","randomizeX","randomizeY","min","random","randomizeAny","round","unfloat","toFixed","precision","mixX","amount","mixY","mix","clone","copyX","copyY","copy","zero","dot","vec2","cross","projectOnto","coeff","horizontalAngle","atan2","horizontalAngleDeg","radian2degrees","verticalAngle","verticalAngleDeg","angleDeg","direction","nx","ny","rotateDeg","degrees2radian","rotateTo","rotation","rotateToDeg","rotateBy","rotateByDeg","distanceX","absDistanceX","distanceY","absDistanceY","distance","sqrt","distanceSq","dx","dy","lengthSq","magnitude","isZero","isEqualTo","toString","toArray","toObject","degrees","floor","rad","deg"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 55057e6788dfced6d46a","import Plane from './plane';\n\nconst props = {\n    width: 0,\n    height: 0,\n\n    scene: []\n};\n\nfunction init() {\n    const canvas = document.getElementById('sky'),\n        dim = document.body.getBoundingClientRect();\n\n    props.context = canvas.getContext('2d');\n    props.context.globalCompositeOperation = 'source-over';\n\n    canvas.width = props.width = dim.width;\n    canvas.height = props.height = dim.height;\n\n    props.scene.push(new Plane(props.width / 2, props.height / 2, props));\n\n    animate();\n}\n\nfunction animate() {\n    requestAnimationFrame(() => {\n        draw();\n        animate();\n    });\n}\n\nfunction draw() {\n    props.context.clearRect(0, 0, props.width, props.height);\n\n    for (let i = 0; i < props.scene.length; i++) {\n        props.scene[i] && props.scene[i].draw && props.scene[i].draw();\n    }\n}\n\ninit();\n\n\n// WEBPACK FOOTER //\n// ./js/main.js","const Victor = require('../node_modules/victor/index');\n\nexport default class Plane {\n    constructor(x, y, props) {\n        this.position = new Victor(x, y);\n        this.velocity = new Victor(0, -2);\n        this.acceleration = new Victor(0, 0);\n        this.ctx = props.context;\n        this.global = props;\n        this.color = 'white';\n        this.angle = 0;\n        this.steeringAngle = 2;\n\n        this.width = 10;\n        this.height = 20;\n\n        document.body.addEventListener('keydown', (e) => {\n            if (e.keyCode == 37) {\n                this.rotate(-this.steeringAngle);\n            } else if (e.keyCode == 39) {\n                this.rotate(this.steeringAngle);\n            }\n        })\n    }\n\n    update() {\n        const angleRadians = this.angle * Math.PI / 180;\n\n        this.velocity.add(this.acceleration);\n\n        let x = this.velocity.x * Math.cos(angleRadians) - this.velocity.y * Math.sin(angleRadians);\n        let y = this.velocity.y * Math.cos(angleRadians) - this.velocity.x * Math.sin(angleRadians);\n        let velocity = new Victor(x, y);\n        this.position.add(velocity);\n\n        this.fixBorders()\n    }\n\n    rotate(dir) {\n        this.angle += dir;\n\n        if (Math.abs(this.angle) > 359) {\n            this.angle = 0;\n        }\n    }\n\n    fixBorders() {\n        this.position.x > this.global.width && (this.position.x = 0);\n        this.position.x < 0 && (this.position.x = this.global.width);\n\n        this.position.y > this.global.height && (this.position.y = 0);\n        this.position.y < 0 && (this.position.y = this.global.height);\n    }\n\n    draw() {\n        this.update();\n        this.ctx.strokeStyle = this.color;\n\n        this.ctx.save();\n\n        this.ctx.beginPath();\n        this.ctx.translate(this.position.x + this.width / 2, this.position.y + this.height / 2);\n        this.ctx.rotate(this.angle * Math.PI / 180);\n        this.ctx.rect(-this.width/2, -this.height/2 , this.width, this.height);\n        this.ctx.fill();\n\n        this.ctx.restore();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./js/plane.js","exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/victor/index.js"],"sourceRoot":""}